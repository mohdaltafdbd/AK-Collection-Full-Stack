{"ast":null,"code":"var _jsxFileName = \"/Users/altafziya/Desktop/new project/ak collection/frontend/src/component/UpdateProduct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    description: \"\",\n    category: \"\",\n    image: \"\"\n  });\n  useEffect(() => {\n    // Fetch the existing product data and update the form fields\n    const fetchProductData = async () => {\n      try {\n        // Make a GET request to retrieve the existing product data\n        const response = await axios.get(`http://localhost:8000/product/${id}`);\n\n        // Update the form data with the retrieved product data\n        setFormData({\n          title: response.data.title,\n          price: response.data.price,\n          description: response.data.description,\n          category: response.data.category,\n          image: response.data.image // Since we don't want to pre-fill the image field\n        });\n      } catch (error) {\n        // Handle any errors that occurred during the API request\n        console.log(error);\n      }\n    };\n    fetchProductData();\n  }, []);\n  const handleInputChange = event => {\n    if (event.target.name === \"image\") {\n      // Store the selected image file\n      setFormData({\n        ...formData,\n        image: event.target.files[0]\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Replace with the actual product ID\n\n      // Create a form data object to send the updated product data\n      const updatedFormData = new FormData();\n      updatedFormData.append(\"title\", formData.title);\n      updatedFormData.append(\"price\", formData.price);\n      updatedFormData.append(\"description\", formData.description);\n      updatedFormData.append(\"category\", formData.category);\n      updatedFormData.append(\"image\", formData.image);\n\n      // Make a PUT request to the API endpoint\n      const response = await axios.put(`http://localhost:8000/product/${id}`, updatedFormData);\n\n      // Handle the response as desired (e.g., display a success message)\n      console.log(response.data);\n    } catch (error) {\n      // Handle any errors that occurred during the API request\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        value: formData.price,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: formData.category,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"7nQBP5CS80j6fKRZlTY88vbJw8c=\", false, function () {\n  return [useParams];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UpdateProduct","id","formData","setFormData","title","price","description","category","image","fetchProductData","response","get","data","error","console","log","handleInputChange","event","target","name","files","value","handleSubmit","preventDefault","updatedFormData","FormData","append","put"],"sources":["/Users/altafziya/Desktop/new project/ak collection/frontend/src/component/UpdateProduct.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\n\n\nconst UpdateProduct = () => {\n  const { id } = useParams();\n\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    description: \"\",\n    category: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    // Fetch the existing product data and update the form fields\n    const fetchProductData = async () => {\n      try {\n\n\n        // Make a GET request to retrieve the existing product data\n        const response = await axios.get(`http://localhost:8000/product/${id}`);\n\n        // Update the form data with the retrieved product data\n        setFormData({\n          title: response.data.title,\n          price: response.data.price,\n          description: response.data.description,\n          category: response.data.category,\n          image: response.data.image, // Since we don't want to pre-fill the image field\n        });\n      } catch (error) {\n        // Handle any errors that occurred during the API request\n        console.log(error);\n      }\n    };\n\n    fetchProductData();\n  }, []);\n\n  const handleInputChange = (event) => {\n    if (event.target.name === \"image\") {\n      // Store the selected image file\n      setFormData({ ...formData, image: event.target.files[0] });\n    } else {\n      setFormData({ ...formData, [event.target.name]: event.target.value });\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {// Replace with the actual product ID\n\n      // Create a form data object to send the updated product data\n      const updatedFormData = new FormData();\n      updatedFormData.append(\"title\", formData.title);\n      updatedFormData.append(\"price\", formData.price);\n      updatedFormData.append(\"description\", formData.description);\n      updatedFormData.append(\"category\", formData.category);\n      updatedFormData.append(\"image\", formData.image);\n\n      // Make a PUT request to the API endpoint\n      const response = await axios.put(\n        `http://localhost:8000/product/${id}`,\n        updatedFormData\n      );\n\n      // Handle the response as desired (e.g., display a success message)\n      console.log(response.data);\n    } catch (error) {\n      // Handle any errors that occurred during the API request\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Update Product</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Title:</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleInputChange}\n        />\n        <br />\n\n        <label>Price:</label>\n        <input\n          type=\"text\"\n          name=\"price\"\n          value={formData.price}\n          onChange={handleInputChange}\n        />\n        <br />\n\n        <label>Description:</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleInputChange}\n        />\n        <br />\n\n        <label>Category:</label>\n        <input\n          type=\"text\"\n          name=\"category\"\n          value={formData.category}\n          onChange={handleInputChange}\n        />\n        <br />\n\n        <label>Image:</label>\n        <input type=\"file\" name=\"image\"  onChange={handleInputChange} />\n        <br />\n        <button type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}