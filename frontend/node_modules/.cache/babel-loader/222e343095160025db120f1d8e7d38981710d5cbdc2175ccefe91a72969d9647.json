{"ast":null,"code":"'use strict';\n\nconst util = require('util');\nconst contentPath = require('./path');\nconst {\n  hasContent\n} = require('./read');\nconst rimraf = util.promisify(require('rimraf'));\nmodule.exports = rm;\nasync function rm(cache, integrity) {\n  const content = await hasContent(cache, integrity);\n  // ~pretty~ sure we can't end up with a content lacking sri, but be safe\n  if (content && content.sri) {\n    await rimraf(contentPath(cache, content.sri));\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"names":["util","require","contentPath","hasContent","rimraf","promisify","module","exports","rm","cache","integrity","content","sri"],"sources":["/Users/altafziya/Desktop/new project/ak collection/frontend/node_modules/cacache/lib/content/rm.js"],"sourcesContent":["'use strict'\n\nconst util = require('util')\n\nconst contentPath = require('./path')\nconst { hasContent } = require('./read')\nconst rimraf = util.promisify(require('rimraf'))\n\nmodule.exports = rm\n\nasync function rm (cache, integrity) {\n  const content = await hasContent(cache, integrity)\n  // ~pretty~ sure we can't end up with a content lacking sri, but be safe\n  if (content && content.sri) {\n    await rimraf(contentPath(cache, content.sri))\n    return true\n  } else {\n    return false\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,WAAW,GAAGD,OAAO,CAAC,QAAQ,CAAC;AACrC,MAAM;EAAEE;AAAW,CAAC,GAAGF,OAAO,CAAC,QAAQ,CAAC;AACxC,MAAMG,MAAM,GAAGJ,IAAI,CAACK,SAAS,CAACJ,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEhDK,MAAM,CAACC,OAAO,GAAGC,EAAE;AAEnB,eAAeA,EAAE,CAAEC,KAAK,EAAEC,SAAS,EAAE;EACnC,MAAMC,OAAO,GAAG,MAAMR,UAAU,CAACM,KAAK,EAAEC,SAAS,CAAC;EAClD;EACA,IAAIC,OAAO,IAAIA,OAAO,CAACC,GAAG,EAAE;IAC1B,MAAMR,MAAM,CAACF,WAAW,CAACO,KAAK,EAAEE,OAAO,CAACC,GAAG,CAAC,CAAC;IAC7C,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}